[global_tags] #les balises global peuvent etre specifiees au format key = "value"

[agent] #on configure l'agent
  interval = "10s"  #interval de collecte de donne pour toutes les entre
  round_interval = true  # arrondi l'interval de collecte a interval

  metric_batch_size = 1000 #telegraf enverra des metriques par lots

  metric_buffer_limit = 10000 #telegraf mettra en cache les metriques pour chaque sortie, et videra le tampon si sa reussi 

  collection_jitter = "0s" #pour eviter que plusieur pluggin interroge des choses comme sysfs en meme temps

  flush_interval = "10s" #interval de donne par defaut de toutes les sorties
  flush_jitter = "0s" #pour eviter les pics decriture importants pour les utilisateurs executant un grand nombre d'instance telegraf

  precision = ""

  hostname = "telegraf-metrics" #remplace le nom d'hote par defaut si il est vide
  omit_hostname = false #si la valeur est true ne definissez pas la balise "host" dans l'agent telegraf

[[outputs.influxdb]] 
  ## The full HTTP or UDP URL for your InfluxDB instance.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  # urls = ["unix:///var/run/influxdb.sock"]
  # urls = ["udp://127.0.0.1:8089"]
  urls = ["http://influxdb:8086"] #on defini la sortie sur le port 8086

 

  ## HTTP User-Agent
  user_agent = "telegraf_ki_k8s" #agent utilisateur

  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
  database = "telegraf" # base de donnee ajoute

    #information d'identification
  username = "admin"
  password = "password"

[[inputs.cpu]]
  percpu = true #indique si il faut ou non signaler les statistiques par processeur
  totalcpu = true #indique si il faut ou non signaler les statistiques total par processeur
  collect_cpu_time = false #si vrai collecter les metriques de temps CPU brutes
  report_active = false #si vrai calculer et et signaler la somme de tout les etats non inactifs du processeur

[[inputs.disk]]
 #ignorer les points de montage par type de systeme de fichier
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

#[[inputs.kube_inventory]] #lire les metriques de l'api kubernetes
#     url = "https://kubernetes" #URL de l'api
#     namespace = "default" #espace de nom a utilise
#     resource_include = [ "deployments", "nodes", "pods" ] #ressource facultatif a inclure lors de la collect
#     insecure_skip_verify = true #ignorez la chaine et la verification de l'hote

[[outputs.file]]
    files = ["stdout"] 
    data_format = "influx"
[[inputs.kubernetes]]
    url = "https://172.17.0.2:10250"
    insecure_skip_verify = true




# [[outputs.file]]
#     files = ["stdout"]
#     data_format = "influx"







# [[inputs.kubernetes]]
#   url = "https://172.17.0.3:10250"
#     insecure_skip_verify = true